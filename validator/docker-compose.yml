version: '3.8'

services:
  node-subtensor:
    image: ghcr.io/opentensor/subtensor:${VERSION_SUBTENSOR:-latest}
    expose:
      - "9944"
      - "30333"
      - "9933"
    environment:
      - CARGO_HOME=/var/www/node-subtensor/.cargo
    command:
      - /bin/bash
      - -c
      - |
        node-subtensor \
          --base-path /tmp/blockchain \
          --chain raw_spec_finney.json \
          --rpc-external --rpc-cors all \
          --no-mdns \
          --in-peers 500 --out-peers 500 \
          --bootnodes /dns/bootnode.finney.chain.opentensor.ai/tcp/30333/ws/p2p/12D3KooWRwbMb85RWnT8DSXSYMWQtuDwh4LJzndoRrTDotTR5gDC \
          --sync warp

  bitcoin-core:
    image: ruimarinho/bitcoin-core:latest
    command:
      -rpcuser=${RPC_USER}
      -rpcpassword=${RPC_PASSWORD}
      -rpcallowip=${RPC_ALLOW_IP:-172.16.0.0/12}
      -rpcbind=${RPC_BIND:-0.0.0.0}
      -maxconnections=${MAX_CONNECTIONS:-512}
      -printtoconsole
      -rpcworkqueue=4086
      -server=1
      -txindex=1
    ports:
      - "8332:8332"
      - "8333:8333"
    volumes:
      - "bitcoin-data:/home/bitcoin/.bitcoin"
    restart: unless-stopped

  validator:
    logging:
      driver: loki
      options:
        loki-url: ${LOKI_URL:-https://gateway.loki.hyperclouds.io/loki/api/v1/push}
    extends:
      file: validator-service.yml
      service: validator-template

  validator-no-logger:
    profiles:
      - no-logger
    extends:
      file: validator-service.yml
      service: validator-template

  validator-api:
    logging:
      driver: loki
      options:
        loki-url: ${LOKI_URL:-https://gateway.loki.hyperclouds.io/loki/api/v1/push}
    extends:
      file: validator-api-service.yml
      service: validator-api-template

  validator-api-no-logger:
    profiles:
      - no-logger
    extends:
      file: validator-api-service.yml
      service: validator-api-template

  postgres:
    image: postgres:16.3-alpine3.20
    expose:
      - "5432:5432"
    volumes:
      - "postgres-data-validator:/var/lib/postgresql/data"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-validator}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeit456$}

  redis:
      image: redis:alpine
      container_name: redis
      expose:
        - "6379:6379"

volumes:
  bitcoin-data:
    name: "bitcoin_bitcoin-data"
  postgres-data-validator:
    name: "postgres_postgres-data-validator"